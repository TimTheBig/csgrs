[package]
name = "csgrs"
version = "0.17.0"
edition = "2024"
description = "Constructive solid geometry on meshes using BSP trees in Rust"
authors = ["Timothy Schmidt <timschmidt@gmail.com>",]
license = "MIT"
repository = "https://github.com/timschmidt/csgrs"
readme = "readme.md"

[dependencies]
nalgebra = "0.33"
geo = { version = "0.29.3", default-features = false, features = ["earcutr"] }

geo-buf = { version = "0.1.0", optional = true } # straight-skeleton offsetting iOverlay can handle this in v2
chull = { version = "0.2.4", optional = true }

rapier3d-f64 = { version = "0.23.0", optional = true }
rapier3d = { version = "0.23.0", optional = true }
parry3d-f64  = { version = "0.18.0", optional = true }
parry3d  = { version = "0.18.0", optional = true }
rayon = { version = "1.7", optional = true }

fast-surface-nets = { version = "0.2.1", optional = true }
hashbrown = { version = "0.15.2", optional = true }

[features]
default = ["f64", "chull-io", "metaballs", "hashmap", "sdf", "offset"]
parallel = [
    "rayon",
    "geo/multithreading",
    "hashbrown/rayon",
    "parry3d/parallel",
    "parry3d-f64/parallel",
    "rapier3d/parallel",
    "rapier3d-f64/parallel"
]
f64 = [
  "rapier3d-f64",
  "parry3d-f64",
]
f32 = [
  "rapier3d",
  "parry3d",
]
chull-io = [ # convex hull and minkowski sum
  "chull",
]
metaballs = [
  "fast-surface-nets",
]
hashmap = [ # slice and related helper functions, is_manifold()
  "hashbrown",
]
sdf = [
  "fast-surface-nets",
]
offset = [
  "geo-buf",
]
